{"version":3,"sources":["TestingFiles/BioData.module.css","Shared/Components/MainNvigation/NavLinks.module.css","Places/Pages/NewPlaces.module.css","Shared/Components/MainNvigation/MainNavigation.module.css","Shared/Components/UI Element/Input.module.css","Users/Components/UserItem.module.css","Places/Components/PlaceItem.module.css","Places/Pages/PlaceDetail.module.css","Shared/Components/UI Element/Spinner.module.css","Authentication/Signin-Form/LoginForm.module.css","Authentication/SignUp-Form/SignUpFrom.module.css","Users/Components/UserList.module.css","Places/Pages/UserPlaces.module.css","Shared/Components/Backdrop/Backdrop.module.css","Shared/Components/UI Element/ImageInput.module.css","Users/Pages/Users.module.css","Shared/Components/Card/Card.module.css","Shared/Components/Modal/Modal.module.css","Places/Components/PlacesList.module.css","Shared/Components/MainNvigation/MainHeader.module.css","Shared/Components/SideDrawer/SideDrawer.module.css","App.js","Shared/Util/Validators/Validator.js","Shared/Components/UI Element/Input.js","Shared/Components/UI Element/Spinner.js","Shared/Components/Backdrop/Backdrop.js","Shared/Contexts/Authentication-Context.js","Shared/Hooks/Form-Hook.js","Authentication/Signin-Form/LoginForm.js","Shared/Components/UI Element/ImageInput.js","Authentication/SignUp-Form/SignUpForm.js","Users/Components/UserItem.js","Users/Components/UserList.js","Users/Pages/Users.js","Places/Pages/NewPlaces.js","Shared/Components/Card/Card.js","Shared/Components/Modal/Modal.js","Places/Components/PlaceItem.js","Places/Components/PlacesList.js","Places/Pages/UserPlaces.js","Places/Pages/UpdatePlace.js","Places/Pages/PlaceDetail.js","Shared/Components/MainNvigation/MainHeader.js","Shared/Components/MainNvigation/NavLinks.js","Shared/Components/SideDrawer/SideDrawer.js","Shared/Components/MainNvigation/MainNavigation.js","TestingFiles/BioData.js","stateStore/reducer.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","MIN_LENGTH_VALIDATOR","v","type","value","MAX_LENGTH_VALIDATOR","validator","valiadtors","isValid","oneValidator","trim","length","test","inputReducer","state","action","inputValue","val","inputIsValid","validators","touched","Input","props","notValidLabelClass","notValidInputClass","rClass","classes","gYellow","inputControl","labelControl","useReducer","initialValue","inputState","dispatch","changeHandler","e","target","touchHandler","InputType","className","fieldType","placeholder","pHolder","onBlur","onChange","rows","wrap","onInputChange","id","useEffect","Fragment","Label","Error","Spinner","asOverlay","loadingSpinner__overlay","ldsDualRing","Backdrop","backdrop","onClick","backdropClicked","children","AuthContext","createContext","loggedIn","userId","userImage","userToken","login","logout","formReducer","validForm","inputId","inputs","formIsValid","inputsValues","ValidForm","useForm","Initial_formState","formState","useCallback","IDofInput","VALUEofInput","VALIDATIONofInput","inputsvalues","Validform","LoginForm","Authenticated","useContext","useState","signIn","setSignIn","email","inputisValid","password","inputChangeHandler","submitForm","a","preventDefault","fetch","process","split","method","headers","body","JSON","stringify","response","json","responseData","ok","U_ID","U_Image","U_Token","alert","errorCode","errorMsg","center","style","color","addPlaceFORM","onSubmit","alignSelf","disabled","ImageInput","image","setImage","imagePreview","setImagePreview","fileInputRef","useRef","fileReader","FileReader","readAsDataURL","onload","result","ref","accept","display","pickedImage","pickedImageISValid","files","size","maxSize","imgDiv","current","click","src","maxHeight","height","alt","SignUpForm","dispatchSignupAction","useDispatch","signUp","setSignUp","userName","conform_password","SignUpData","FormData","append","console","dir","signUpMainForm","UserItem","user_item","to","user_item_image","user_item_info","name","totalPlaces","UserList","users","oneUser","map","key","U_Name","U_Places","Users","errorMessage","setErrorMessage","useSelector","allUsers","usersFetched","userLoadingState","setUserLoadingState","dispatchUsers","getUsers","data","message","error","NewPlaces","dispatchPlaceAdded","uid","history","useHistory","adding","setAdding","title","address","description","newPlaceImage","addPlace","newPlaceData","Authorization","push","Card","card","Modal","changeModalState","mapDiv","modalHeader","modalMain","mapModal","deleteModal","deletePlace","PlaceItem","dispatchPlaceDeleted","useParams","deleting","setDeleting","showDeleteModal","setShowDeleteModal","showDeleteModalhandler","deletePlaceHandler","onDelete","deleteModalHeader","deleteModalMain","border","onePlace","onePlaceBtns","PlacesList","userPlaces","placesList","P_ID","P_Image","P_Title","desc","P_Description","P_Address","creator","onDeletePlace","UserPlaces","placesFetched","placesLoadingState","setPlacesLoadingState","dispatchUsersPlaces","allPlaces","filter","place","userUID","toString","getPlaceByUserId","places","spinnerCenter","UpdatePlace","dispatchPlaceUpdated","pID","setPlace","updating","setUpdating","place2BeUpdated","find","inputChangeHandle","dataSetter","getPlaceById","submitUpdatedPlace","DetailPlace","getPlaces","placeDetail","whiteSpace","textAlign","MainHeader","mainHeader","NavLinks","navLinks","navLink","SideDrawer","sideDrawer","drawerClicked","MainNavigation","uImage","drawerState","setDrawerState","DrawerHandler","S_Drawer","imgORtext","menuBtn","mainNavTitle","BioData","inputRef","gamesRef","showCalendar","setShowCalendar","showGames","setShowGames","progress","setProgress","showProgress","setShowProgress","fName","lName","CNIC","CNICDate","phNumber","province","relegion","qualification","DOB","languages","gender","cPassword","games","setFormState","pState","log","inputElement","label","min","max","req","pattren","inputDiv","htmlFor","minLength","maxLength","required","pattern","list","createCheckboxOrRadioInput","outerDiv","file","onprogress","loaded","total","toFixed","onloadend","imgChooser","Progress","width","selector","p","join","selectedOptions","op","multiple","game","fieldsetDiv","q","dob","calendar","onClickDay","d","toLocaleDateString","minDate","Date","i","splice","tArea","submitBtn","App","Routes","token","setToken","userID","setUserID","setUserImage","tokenExpirationDate","setTokenExpirationDate","LOGIN","uImg","uTkn","tknDate","ExpirationDate","getTime","localStorage","setItem","uId","uToken","TokenExpiryDate","toISOString","LOGOUT","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","path","exact","PlaceDetail","Provider","initialState","reducer","Boolean","window","location","hostname","match","Store","createStore","Reducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7721496c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Progress\":\"BioData_Progress__DjZj4\",\"outerDiv\":\"BioData_outerDiv__ksWFn\",\"imgChooser\":\"BioData_imgChooser__1NYRa\",\"inputDiv\":\"BioData_inputDiv__8931O\",\"selector\":\"BioData_selector__10DRo\",\"tArea\":\"BioData_tArea__1a92B\",\"dob\":\"BioData_dob__2ypAh\",\"CNICdate\":\"BioData_CNICdate__JmfzN\",\"react-datepicker\":\"BioData_react-datepicker__3GsPk\",\"calendar\":\"BioData_calendar__118yq\",\"games\":\"BioData_games__3ylZh\",\"submitBtn\":\"BioData_submitBtn__1QHMF\",\"fieldsetDiv\":\"BioData_fieldsetDiv__3Lks7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinks\":\"NavLinks_navLinks__3IBt2\",\"navLink\":\"NavLinks_navLink__1WspY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"NewPlaces_center__1SEUG\",\"addPlaceFORM\":\"NewPlaces_addPlaceFORM__3E0Bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuBtn\":\"MainNavigation_menuBtn__1hs83\",\"mainNavTitle\":\"MainNavigation_mainNavTitle__3rW2_\",\"navLinks\":\"MainNavigation_navLinks__2eFWS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputControl\":\"Input_inputControl__2XYLL\",\"labelControl\":\"Input_labelControl__22k8e\",\"gYellow\":\"Input_gYellow__1bi96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_item\":\"UserItem_user_item__1N6Lr\",\"user_item_image\":\"UserItem_user_item_image__3EFbW\",\"user_item_info\":\"UserItem_user_item_info__1v_Kf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onePlace\":\"PlaceItem_onePlace__gNjSM\",\"description\":\"PlaceItem_description__LMc0K\",\"onePlaceBtns\":\"PlaceItem_onePlaceBtns__gd0W8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerCenter\":\"PlaceDetail_spinnerCenter__PqZ8U\",\"center\":\"PlaceDetail_center__33XWM\",\"placeDetail\":\"PlaceDetail_placeDetail__3nNJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Spinner_ldsDualRing__E8sB_\",\"lds-dual-ring\":\"Spinner_lds-dual-ring__2Svn6\",\"loadingSpinner__overlay\":\"Spinner_loadingSpinner__overlay__1EoTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoginForm_center__3M7Wr\",\"addPlaceFORM\":\"LoginForm_addPlaceFORM__23JLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"SignUpFrom_center__1sby5\",\"signUpMainForm\":\"SignUpFrom_signUpMainForm__3i0CQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"UserList_center__TJp7q\",\"oneUser\":\"UserList_oneUser__2WYP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"UserPlaces_center__C4WQf\",\"spinnerCenter\":\"UserPlaces_spinnerCenter__UQu6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__2EI8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgDiv\":\"ImageInput_imgDiv__3eLb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Users_center__1GAmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3P3gi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapDiv\":\"Modal_mapDiv__b-qfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placesList\":\"PlacesList_placesList__1miOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"MainHeader_mainHeader__2tugc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideDrawer\":\"SideDrawer_sideDrawer__18ntV\"};","import React , {useState, useCallback, useEffect} from 'react';\nimport {BrowserRouter as Router , Route , Switch , Redirect} from 'react-router-dom';\n\nimport LoginForm from './Authentication/Signin-Form/LoginForm';\nimport SignUpForm from './Authentication/SignUp-Form/SignUpForm';\nimport Users from './Users/Pages/Users';\nimport NewPlaces from './Places/Pages/NewPlaces';\nimport UserPlaces from './Places/Pages/UserPlaces';\nimport UpdatePlace from './Places/Pages/UpdatePlace';\nimport PlaceDetail from './Places/Pages/PlaceDetail';\nimport MainNavigation from './Shared/Components/MainNvigation/MainNavigation';\nimport Form from './TestingFiles/BioData';\nimport {AuthContext} from './Shared/Contexts/Authentication-Context';\nimport './App.css';\n\nlet Timer;\n\nconst  App = () =>\n{  \n  const [token , setToken] = useState(false) ;\n  const [userID , setUserID] = useState(null) ;\n  const [userImage , setUserImage] = useState('Users Places') ;\n  const [tokenExpirationDate , setTokenExpirationDate] = useState() ;\n\n  const LOGIN = useCallback( (uid, uImg, uTkn, tknDate)=>\n  {\n    setToken(uTkn);\n    setUserID(`${uid}`);\n    setUserImage(uImg);\n    const ExpirationDate = tknDate || new Date( new Date().getTime()+ 1000 * 60 * 30);\n    setTokenExpirationDate(ExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({uId : uid, uImage : uImg, uToken : uTkn, TokenExpiryDate : ExpirationDate.toISOString()}));\n  },[]) ;\n  const LOGOUT = useCallback( () =>\n    {\n      setToken(null);\n      setTokenExpirationDate(null)\n      setUserID(null);\n      setUserImage('Users Places');\n      localStorage.removeItem('userData')\n  },[]) \n\n  useEffect( () =>\n  { \n    if(token && tokenExpirationDate)\n    {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      Timer = setTimeout(LOGOUT, remainingTime);\n    }\n    else clearTimeout(Timer)\n  },[token, tokenExpirationDate,LOGOUT])\n\n\n  useEffect( () =>\n  { \n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if(storedData && storedData.uToken && new Date(storedData.TokenExpiryDate) > new Date())\n    { \n      LOGIN(storedData.uId,storedData.uImage,storedData.uToken, new Date(storedData.TokenExpiryDate))\n    }    \n  },[LOGIN]);\n\n\n  var Routes;\n  if(!token)\n  {\n    Routes = (\n      <Switch>\n          <Route path='/' exact>\n            <Users/>\n          </Route>\n          <Route path='/login' exact>\n            <LoginForm/>\n          </Route>\n          <Route path='/signup' exact>\n            <SignUpForm/>\n          </Route>\n          <Route path='/:uid/places' exact>\n            <UserPlaces/>\n          </Route>\n          <Route path='/places/:pID/detail' exact>\n            <PlaceDetail/>\n          </Route>\n          <Route path='/form' exact>\n            <Form/>\n          </Route>\n          <Redirect to = '/login' />\n      </Switch>\n    )\n  }\n  else\n  {\n    Routes = (\n    <Switch>\n      <Route path='/' exact>\n        <Users/>\n      </Route>\n      <Route path='/:uid/places' exact>\n        <UserPlaces/>\n      </Route>\n      <Route path='/places/new' exact>\n        <NewPlaces/>\n      </Route>\n      <Route path='/places/:pID/update' exact>\n        <UpdatePlace/>\n      </Route>\n      <Route path='/places/:pID/detail' exact>\n        <PlaceDetail/>\n      </Route>\n      <Route path='/form' exact>\n        <Form/>\n      </Route>\n      <Redirect to='/' />\n    </Switch>\n  )\n  }\n  \n  return(\n    <AuthContext.Provider value = {\n      {loggedIn : !!token , \n      userId : userID, \n      userImage : userImage,\n      userToken : token,\n      login : LOGIN , \n      logout : LOGOUT, }}>\n      <Router>\n       <MainNavigation />\n        <main>\n           {Routes}  \n        </main>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;\n","const REQUIRE_VALIDATOR_TYPE    = \"REQUIRE\";\r\nconst MIN_LENGTH_VALIDATOR_TYPE = \"MIN_LENGTH\";\r\nconst MAX_LENGTH_VALIDATOR_TYPE = \"MAX_LENGTH\";\r\nconst EMAIL_VALIDATOR_TYPE      = \"EMAIL\";\r\n// const FILE_VALIDATOR_TYPE    = \"FILE\";\r\n\r\nexport  const REQUIRE_VALIDATOR     = ()    =>    ({   type:   REQUIRE_VALIDATOR_TYPE  });\r\nexport  const MIN_LENGTH_VALIDATOR  = v     =>    ({   type:   MIN_LENGTH_VALIDATOR_TYPE ,  value: v});\r\nexport  const MAX_LENGTH_VALIDATOR  = v     =>    ({   type:   MAX_LENGTH_VALIDATOR_TYPE ,  value: v});\r\nexport  const EMAIL_VALIDATOR       = ()    =>    ({   type:   EMAIL_VALIDATOR_TYPE });\r\n\r\nexport const validator = (value , valiadtors) =>\r\n{\r\n    let isValid = true;\r\n    if(valiadtors)\r\n    {\r\n        for(let oneValidator of valiadtors)\r\n        {   \r\n            if(oneValidator.type === REQUIRE_VALIDATOR_TYPE)\r\n            {isValid =  isValid && value.trim().length > 0;}\r\n            \r\n            if(oneValidator.type === MIN_LENGTH_VALIDATOR_TYPE)\r\n            {isValid =  isValid &&  value.trim().length >= oneValidator.value;}\r\n            \r\n            if(oneValidator.type === MAX_LENGTH_VALIDATOR_TYPE)\r\n            {isValid =  isValid &&  value.trim().length <=oneValidator.value;}\r\n            \r\n            if(oneValidator.type === EMAIL_VALIDATOR_TYPE) \r\n            {isValid =  isValid && /^\\S+@\\S+\\.\\S+$/.test(value);}\r\n        }\r\n    }\r\n   return isValid\r\n}","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport {validator} from '../../Util/Validators/Validator';\r\nimport classes from './Input.module.css';\r\n\r\nconst inputReducer = (state , action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"CHANGE\":\r\n        return{...state , inputValue : action.val , inputIsValid : validator(action.val , action.validators) }\r\n        \r\n        case \"TOUCH\":\r\n        return {...state , touched : true}\r\n\r\n        default:  return {...state}\r\n    }\r\n}\r\n\r\nconst Input = props =>\r\n{\r\n    var notValidLabelClass , notValidInputClass;\r\n    if(props.rClass)   { notValidLabelClass = notValidInputClass = classes.gYellow;}\r\n    else { notValidInputClass = classes.inputControl ; notValidLabelClass = classes.labelControl }\r\n   \r\n\r\n\r\n    const [inputState , dispatch ] = useReducer(\r\n        inputReducer , \r\n        {inputValue : props.initialValue || '' ,\r\n        inputIsValid : props.isValid || false , \r\n        touched : false})\r\n    \r\n    const changeHandler = (e) =>\r\n    {\r\n       dispatch({type : \"CHANGE\" , val : e.target.value , validators : props.validators});\r\n    }\r\n    const touchHandler = (e) =>\r\n    {\r\n       dispatch({type : \"TOUCH\"});\r\n    }\r\n    var InputType = null;\r\n    props.type === \"Input\" ? InputType = (\r\n    <input  className = {!inputState.inputIsValid && inputState.touched ? notValidInputClass : null} \r\n        type={props.fieldType || 'text'}          \r\n        placeholder={props.pHolder} \r\n        value = {inputState.inputValue}\r\n        onBlur={touchHandler} \r\n        onChange = {changeHandler} \r\n    />) \r\n    : InputType = (\r\n    <textarea className = {!inputState.inputIsValid && inputState.touched ? notValidInputClass : null}\r\n        type='text' rows='5' \r\n        wrap = 'hard'\r\n        placeholder={props.pHolder}\r\n        value = {inputState.inputValue}\r\n        onBlur={touchHandler} \r\n        onChange = {changeHandler}\r\n    />)\r\n    \r\n    const {onInputChange, id} = props;\r\n    const {inputValue , inputIsValid} = inputState;\r\n        useEffect( () => \r\n        {   \r\n            onInputChange(id , inputValue , inputIsValid);\r\n        }, [id , inputValue , inputIsValid , onInputChange])\r\n        \r\n\r\n    return (\r\n        <React.Fragment>\r\n        <label className = {`${!inputState.inputIsValid && inputState.touched && notValidLabelClass}`}><b>{props.Label}</b></label>\r\n        {InputType}\r\n        {!inputState.inputIsValid && inputState.touched && <p className={notValidLabelClass}>{props.Error}</p>} \r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Input;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && classes.loadingSpinner__overlay}`}>\r\n      <div className={classes.ldsDualRing}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = (props) =>\r\n{\r\nreturn <div className={classes.backdrop} onClick = {props.backdropClicked}>\r\n            {props.children}\r\n        </div>\r\n}\r\n\r\nexport default Backdrop;","import {createContext} from 'react';\r\n\r\nexport const AuthContext = createContext(\r\n    {\r\n        loggedIn : false , \r\n        userId   : null,\r\n        userImage : 'Users Places',\r\n        userToken : null,\r\n        login    : () => {},\r\n        logout   : () => {},\r\n\r\n    }\r\n)","import {useReducer , useCallback} from 'react';\r\n\r\nconst formReducer = ( state , action ) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"INPUT_CHANGE\":\r\n        let validForm = true;\r\n            for(const inputId in state.inputs)\r\n            {\r\n                if(inputId === action.id)\r\n                {  \r\n                    validForm = validForm && action.inputIsValid;\r\n                }\r\n                else \r\n                {   validForm = validForm && state.inputs[inputId].inputIsValid; }\r\n            \r\n            }\r\n            return {\r\n                    ...state ,\r\n                    inputs : {\r\n                        ...state.inputs,\r\n                        [action.id] : {inputValue : action.inputValue , inputIsValid : action.inputIsValid} },\r\n                    formIsValid : validForm,\r\n                };\r\n        case \"SET_DATA\":\r\n            return{\r\n                inputs : action.inputsValues,\r\n                formIsValid : action.ValidForm\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const useForm = (inputsValues , Initial_formState) =>\r\n{\r\n    const [formState , dispatch] = useReducer(formReducer , {\r\n        inputs : inputsValues,\r\n        formIsValid : Initial_formState,\r\n    });\r\n    \r\n    const inputChangeHandler = useCallback( (IDofInput , VALUEofInput , VALIDATIONofInput) =>\r\n    {\r\n        dispatch( {type : \"INPUT_CHANGE\" , id: IDofInput , inputValue: VALUEofInput , inputIsValid: VALIDATIONofInput})\r\n    },[]);\r\n    const setData = useCallback( (inputsvalues , Validform) =>\r\n    {\r\n        dispatch( {type : \"SET_DATA\"  , inputsValues: inputsvalues , ValidForm: Validform})\r\n    },[]);\r\n\r\n    return [formState , inputChangeHandler, setData]\r\n}","import React , {useContext, useState} from 'react';\r\n\r\nimport Input from '../../Shared/Components/UI Element/Input';\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport Backdrop from '../../Shared/Components/Backdrop/Backdrop';\r\nimport {AuthContext} from '../../Shared/Contexts/Authentication-Context';\r\nimport {useForm} from '../../Shared/Hooks/Form-Hook';\r\nimport {MIN_LENGTH_VALIDATOR , EMAIL_VALIDATOR} from '../../Shared/Util/Validators/Validator';\r\nimport classes from './LoginForm.module.css';\r\n\r\nconst LoginForm = () =>\r\n{\r\n    const Authenticated = useContext(AuthContext);\r\n\r\n    const [signIn, setSignIn] = useState(false);\r\n\r\n    const [formState , inputChangeHandler] = useForm({\r\n        email : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        password : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n    } , false)\r\n      \r\n    const submitForm = async e =>\r\n    {\r\n        setSignIn(true);\r\n        e.preventDefault();\r\n        try \r\n        {\r\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL.split(';')[0].split(';')[0] + '/users/signin',\r\n            {\r\n                method : 'POST',\r\n                headers : {'Content-Type' : 'application/json'},\r\n                body : JSON.stringify(\r\n                    {\r\n                        email : formState.inputs.email.inputValue,\r\n                        password : formState.inputs.password.inputValue,\r\n                    }\r\n                )\r\n            })\r\n\r\n            const responseData = await response.json();\r\n            if(!response.ok)\r\n            {\r\n                setSignIn(false);\r\n                alert(responseData.errorCode+\"\\n\"+responseData.errorMsg);\r\n            }\r\n            else\r\n            {\r\n                setSignIn(false);\r\n                // console.log(responseData);\r\n                Authenticated.login(responseData.U_ID, responseData.U_Image, responseData.U_Token)\r\n            }\r\n\r\n        } catch (error) {  setSignIn(false); alert(error)     }\r\n        \r\n    }  \r\n   \r\n    return(\r\n        <div className={classes.center}>\r\n             {signIn && \r\n            <Backdrop>\r\n                <Spinner />\r\n                <h2 style={{color:'gold'}}>Signing In</h2>\r\n            </Backdrop>\r\n            }\r\n            <form className = {classes.addPlaceFORM} onSubmit = {submitForm}>\r\n                <h3 style={{alignSelf: 'center'}}>SignIn</h3>\r\n                <Input  \r\n                    id = \"email\" type = \"Input\" fieldType = 'email' Label = \"Email\" \r\n                    pHolder = \"Enter Email Address\" rClass = 'gYellow'\r\n                    Error = \"Please Enter a Valid Email\" onInputChange = {inputChangeHandler}\r\n                    validators = {[EMAIL_VALIDATOR()]} \r\n                />\r\n\r\n                <Input  \r\n                    id = \"password\" type = \"Input\" fieldType = 'password'  Label = \"Password\" \r\n                    pHolder = \"Enter Password\" rClass = 'gYellow'\r\n                    Error = \"Password Field is Required\" onInputChange = {inputChangeHandler}\r\n                    validators = {[MIN_LENGTH_VALIDATOR(1)]}\r\n                />\r\n\r\n                <button  className = 'btn btn-outline-success p-2 mt-3' disabled={!formState.formIsValid}>\r\n                LOG IN\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport classes from './ImageInput.module.css';\r\n\r\nconst ImageInput = props =>\r\n{\r\n    const [image , setImage] = useState();\r\n //   const [validImage , setValidImage] = useState(false);\r\n    const [imagePreview , setImagePreview] = useState();\r\n    const fileInputRef = useRef();\r\n\r\n    useEffect( () =>\r\n    {\r\n        if(!image) return\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(image);\r\n        fileReader.onload = () => \r\n        {\r\n            setImagePreview(fileReader.result);\r\n        }\r\n    },[image])\r\n\r\n    const pickImageHandler = () =>\r\n    {\r\n        fileInputRef.current.click();\r\n    }\r\n    const imagePickedHandler = e =>\r\n    {\r\n        let pickedImage , pickedImageISValid;\r\n        if(e.target.files && e.target.files.length===1)\r\n        {\r\n            pickedImage  = e.target.files[0];\r\n            setImage(pickedImage);\r\n            //setValidImage(true);\r\n            if(pickedImage.size > 5242880) alert(`WARRNING \\nImage is too Large\\nPlease Replace with another one\\nMAXIMUM IMAGE SIZE = ${props.maxSize||5}MB`)\r\n            pickedImageISValid = true\r\n        }\r\n        else if(image) return;\r\n        else  pickedImageISValid = false;\r\n        props.onInputChange(props.id, pickedImage, pickedImageISValid)\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <input \r\n                id={props.id} \r\n                type='file' \r\n                ref = {fileInputRef}\r\n                accept='.jpg, .jpeg, .png,' \r\n                style={{display : 'none'}}\r\n                onChange = {imagePickedHandler}\r\n            />\r\n\r\n            <div className={classes.imgDiv}>\r\n                <button type='button'   onClick = {pickImageHandler}>\r\n                    {imagePreview &&  <img src={imagePreview} style={{maxHeight: props.height}}  alt='PREVIEW'/>}\r\n                    {!imagePreview && <b><p  style={{maxHeight: props.height}}>Please Pick an Image</p></b>}\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n    ) \r\n}\r\n\r\nexport default ImageInput;\r\n","import React , {useContext, useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Input from '../../Shared/Components/UI Element/Input';\r\nimport ImageInput from '../../Shared/Components/UI Element/ImageInput';\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport Backdrop from '../../Shared/Components/Backdrop/Backdrop';\r\nimport {AuthContext} from '../../Shared/Contexts/Authentication-Context';\r\nimport {useForm} from '../../Shared/Hooks/Form-Hook';\r\nimport {MIN_LENGTH_VALIDATOR , EMAIL_VALIDATOR, MAX_LENGTH_VALIDATOR} from '../../Shared/Util/Validators/Validator';\r\nimport classes from './SignUpFrom.module.css';\r\n\r\nconst SignUpForm = () =>\r\n{\r\n    const Authenticated = useContext(AuthContext);\r\n    const dispatchSignupAction = useDispatch();\r\n\r\n    const [signUp, setSignUp] = useState(false);\r\n\r\n    const [formState , inputChangeHandler] = useForm({\r\n        userName : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        userImage : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        email : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        password : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        conform_password : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n    } , false)\r\n    \r\n    const submitForm = async e =>\r\n    {\r\n         e.preventDefault();\r\n        \r\n        if(formState.inputs.password.inputValue === formState.inputs.conform_password.inputValue)\r\n        {  if(formState.inputs.userImage.inputValue.size > 3145728) \r\n            {alert(\"Please Select An Image With Size Less than 3MB\"); return}\r\n            setSignUp(true);\r\n            try \r\n            {\r\n                const SignUpData = new FormData();\r\n                SignUpData.append('name', formState.inputs.userName.inputValue);\r\n                SignUpData.append('email', formState.inputs.email.inputValue);\r\n                SignUpData.append('password', formState.inputs.password.inputValue);\r\n                SignUpData.append('userImage', formState.inputs.userImage.inputValue);\r\n                \r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL.split(';')[0] + '/users/signup',\r\n                {\r\n                    method : 'POST',\r\n                    body   : SignUpData,\r\n                })\r\n    \r\n                const responseData = await response.json();\r\n                if(!response.ok)\r\n                {\r\n                    setSignUp(false);\r\n                    alert(responseData.errorCode+\"\\n\"+responseData.errorMsg);\r\n                }\r\n                else\r\n                {\r\n                    setSignUp(false);\r\n                    dispatchSignupAction({type: 'SIGN_UP'})\r\n                    Authenticated.login(responseData.U_ID, responseData.U_Image, responseData.U_Token)\r\n                }\r\n    \r\n            } catch (error) { setSignUp(false); console.dir(error); alert(error)     }\r\n        }\r\n        else alert(\"Passwords Do not Match\")\r\n    }\r\n   \r\n    return(\r\n        <div className={classes.center} >\r\n            {signUp && \r\n            <Backdrop>\r\n                <Spinner />\r\n                <h2 style={{color:'gold'}}>Signing Up</h2>\r\n            </Backdrop>\r\n            }\r\n            <form className = {classes.signUpMainForm} onSubmit = { submitForm}>\r\n                <h3 style={{alignSelf: 'center'}}>SignUp</h3>\r\n\r\n                <div className='row align-items-center px-md-2'>\r\n                    <div className='col-md-6 col-12 order-md-2'>\r\n                        <ImageInput \r\n                            id='userImage' Error = \"Please Pick an Image\" height = '200px' maxSize = {3}\r\n                            onInputChange = {inputChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className='col-md-6 col-12 order-md-1'>\r\n                        <Input  \r\n                            id = \"userName\" type = \"Input\" fieldType = 'text' Label = \"Name\" \r\n                            pHolder = \"Enter Your Name\" rClass = 'gYellow'\r\n                            Error = \"Name Field is Required with MAXIMUM LENGTH of 25 Words\" onInputChange = {inputChangeHandler}\r\n                            validators = {[MIN_LENGTH_VALIDATOR(1),MAX_LENGTH_VALIDATOR(25)]} \r\n                        />\r\n                        <Input  \r\n                            id = \"email\" type = \"Input\" fieldType = 'email' Label = \"Email\" \r\n                            pHolder = \"Enter Email Address\" rClass = 'gYellow'\r\n                            Error = \"Please Enter a Valid Email\" onInputChange = {inputChangeHandler}\r\n                            validators = {[EMAIL_VALIDATOR()]} \r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n                    \r\n                <div className='row p-md-2'>\r\n                    <div className='col-md-6 col-12'>\r\n                        <Input  \r\n                            id = \"password\" type = \"Input\" fieldType = 'password'  Label = \"Password\" \r\n                            pHolder = \"Enter Password\" rClass = 'gYellow'\r\n                            Error = \"Password Field is Required with MAXIMUM LENGTH of 15 Words\" onInputChange = {inputChangeHandler}\r\n                            validators = {[MIN_LENGTH_VALIDATOR(1),MAX_LENGTH_VALIDATOR(15)]}\r\n                        />\r\n                    </div>\r\n                    <div className='col-md-6 col-12'>\r\n                        <Input  \r\n                            id = \"conform_password\" type = \"Input\" fieldType = 'password'  Label = \"Conform Password\" \r\n                            pHolder = \"Enter Password\" rClass = 'gYellow'\r\n                            Error = \"Password Field is Required with MAXIMUM LENGTH of 15 Words\" onInputChange = {inputChangeHandler}\r\n                            validators = {[MIN_LENGTH_VALIDATOR(1),MAX_LENGTH_VALIDATOR(15)]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                    \r\n                    <button  className = 'btn btn-outline-success p-2 mt-3 mx-md-2' disabled={!formState.formIsValid}>\r\n                        SIGN UP\r\n                    </button>\r\n                \r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport classes from './UserItem.module.css';\r\n\r\nconst UserItem = (props) =>\r\n{   \r\n    return(\r\n        <>\r\n        <li className = {classes.user_item}>\r\n            <Link to = {`/${props.id}/places`}>\r\n                <div className = {classes.user_item_image}>\r\n                    <img src={props.image} alt='' />\r\n                    {/* <img src={`${process.env.REACT_APP_ASSET_URL.split(';')[0]}/${props.image}`} alt='' /> */}\r\n                </div>\r\n                <div className = {classes.user_item_info}>\r\n                    <b><p>{props.name}</p></b>\r\n                    <b><p> {props.totalPlaces} {props.totalPlaces <= '1' ? 'Place' : 'Places'}</p></b>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserItem;","import React from 'react';\r\n\r\nimport UserItem from './UserItem'\r\nimport classes from './UserList.module.css';\r\n\r\nconst UserList = (props) =>\r\n{\r\n    if(props.users.length === 0)\r\n    {\r\n        return(\r\n            <div className = {classes.center}>\r\n                <h2 style={{color: 'white'}}>No User Found</h2>\r\n                {/* <br/>\r\n                {props.error && <h2 style={{color: 'white'}}>ERROR : {props.error}</h2>} */}\r\n            </div>\r\n        )\r\n    }\r\n    else \r\n    { \r\n        return(\r\n            <div className = {classes.oneUser}>\r\n                <ul>\r\n                {props.users.map( (v) =>\r\n                <UserItem  \r\n                    key = {v.U_ID}\r\n                    id = {v.U_ID}\r\n                    name = { v.U_Name}\r\n                    image = {v.U_Image}\r\n                    totalPlaces = {v.U_Places}\r\n                />\r\n                )}\r\n                </ul>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList;","import React , {useEffect, useState, useCallback} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport UserList from '../Components/UserList';\r\nimport classes from './Users.module.css'\r\n\r\nconst Users = props =>\r\n{\r\n    const[errorMessage, setErrorMessage] = useState();\r\n    const users = useSelector( state => state.allUsers);\r\n    const usersFetched = useSelector( state => state.usersFetched);\r\n    const[userLoadingState, setUserLoadingState] = useState(!usersFetched);\r\n    const dispatchUsers = useDispatch();\r\n\r\n    const getUsers = useCallback(async () =>\r\n    {\r\n        try \r\n        {\r\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL.split(';')[0]+'/users');\r\n            const data = await response.json();\r\n            \r\n            setUserLoadingState(false);\r\n            \r\n            if(response.ok) \r\n            dispatchUsers({     type : 'USERS_FETCHED',     value : data    })\r\n            \r\n            else    throw new Error(data.errorMsg)\r\n            \r\n        } catch (error) { setErrorMessage(error.message); setUserLoadingState(false);   }\r\n    },[dispatchUsers])\r\n    useEffect(()=>\r\n    {\r\n        if(!usersFetched) getUsers();\r\n    },\r\n    [usersFetched,getUsers])\r\n\r\n    return(\r\n        \r\n        <>\r\n            {userLoadingState && \r\n                <div className = {classes.center}>\r\n                    <Spinner />\r\n                    <h2>Loading...</h2>\r\n                </div>\r\n            } \r\n\r\n            { !userLoadingState &&\r\n                <div>\r\n                <UserList users = {users} error = {errorMessage}/>\r\n                </div>\r\n            } \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Users;","import React, { useContext, useState } from 'react';\r\nimport {useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../Shared/Components/UI Element/Input';\r\nimport ImageInput from '../../Shared/Components/UI Element/ImageInput';\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport Backdrop from '../../Shared/Components/Backdrop/Backdrop';\r\nimport {AuthContext} from '../../Shared/Contexts/Authentication-Context';\r\nimport {useForm} from '../../Shared/Hooks/Form-Hook';\r\nimport {MIN_LENGTH_VALIDATOR,MAX_LENGTH_VALIDATOR} from '../../Shared/Util/Validators/Validator';\r\nimport classes from './NewPlaces.module.css';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst NewPlaces = () =>\r\n{\r\n    const dispatchPlaceAdded = useDispatch();\r\n    const Authenticated = useContext(AuthContext);\r\n    const uid = Authenticated.userId;\r\n    const history = useHistory();\r\n    \r\n    const [adding, setAdding] = useState(false);\r\n    \r\n    const [formState , inputChangeHandler] = useForm({\r\n        title : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        address : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        description : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        newPlaceImage: {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n    } , false)\r\n    \r\nconst addPlace = async e =>\r\n{\r\n    e.preventDefault();\r\n    if(formState.inputs.newPlaceImage.inputValue.size > 5242880) \r\n    {alert(\"Please Select An Image With Size Less than 5MB\"); return}\r\n    setAdding(true);\r\n    try \r\n    {   const newPlaceData = new FormData();\r\n        newPlaceData.append('title', formState.inputs.title.inputValue)\r\n        newPlaceData.append('address', formState.inputs.address.inputValue)\r\n        newPlaceData.append('description', formState.inputs.description.inputValue)\r\n        newPlaceData.append('creator', uid)\r\n        newPlaceData.append('newPlaceImage', formState.inputs.newPlaceImage.inputValue)\r\n        \r\n        const response = await fetch(process.env.REACT_APP_BACKEND_URL.split(';')[0] + '/places',\r\n        {\r\n            method :    'POST',\r\n            headers:    {Authorization :  \"Bearer \" + Authenticated.userToken},\r\n            body   :     newPlaceData\r\n        });\r\n        const responseData = await response.json();\r\n        \r\n        if(!response.ok)\r\n        {\r\n            setAdding(false);\r\n            history.push(`/`);\r\n            alert(responseData.errorCode+\"\\n\"+responseData.errorMsg)\r\n        }\r\n        else\r\n        {\r\n            setAdding(false);\r\n            dispatchPlaceAdded({ type : 'NEW_PLACE_ADDED'})\r\n            history.push(`/${uid}/places`)\r\n        }\r\n\r\n    } \r\n    catch (error) { setAdding(false); alert(error)  }\r\n}   \r\n\r\n    return(\r\n\r\n        <div className={classes.center} >\r\n            {adding && \r\n            <Backdrop>\r\n                <Spinner />\r\n                <h2 style={{color:'gold'}}>Adding New Place...</h2>\r\n            </Backdrop>\r\n            }\r\n            <form className = {classes.addPlaceFORM} onSubmit = {addPlace}>\r\n\r\n                <ImageInput \r\n                    id='newPlaceImage' Error = \"Please Pick an Image\" height = '300px'\r\n                    onInputChange = {inputChangeHandler}\r\n                /> \r\n                <Input  \r\n                    id = \"title\" type = \"Input\" Label = \"Title\" \r\n                    pHolder = \"Enter The Name of Place\" \r\n                    Error = \"Please Enter a Valid Title with MINIMUM LENGTH of 5 and MAXIMUM LENGTH of 50 Words\" onInputChange = {inputChangeHandler}\r\n                    validators = {[MIN_LENGTH_VALIDATOR(5),MAX_LENGTH_VALIDATOR(50)]} \r\n                />\r\n\r\n                <Input  \r\n                    id = \"address\" type = \"Input\" Label = \"Address\" \r\n                    pHolder = \"Enter The Address of Place\" \r\n                    Error = \"Please Enter a Valid Address with MINIMUM LENGTH of 5 and MAXIMUM LENGTH of 80 Words\" onInputChange = {inputChangeHandler}\r\n                    validators = {[MIN_LENGTH_VALIDATOR(5),MAX_LENGTH_VALIDATOR(80)]}\r\n                />\r\n\r\n                <Input  \r\n                    id = \"description\" type = \"textArea\" Label = \"Description\" \r\n                    pHolder = \"Enter Description for Selected Place\"  \r\n                    Error = \"Please Enter a Valid Description with MINIMUM LENGTH of 5\" onInputChange = {inputChangeHandler}\r\n                    validators = {[MIN_LENGTH_VALIDATOR(5)]} \r\n                />\r\n\r\n                <button disabled={!formState.formIsValid} className = {`btn ${formState.formIsValid ? 'btn-outline-success' : 'btn-danger'}`}>\r\n                    ADD PLACE\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPlaces;","import React from 'react';\r\n\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={classes.card} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Backdrop from'../Backdrop/Backdrop';\r\nimport classes from './Modal.module.css';\r\n\r\nconst Modal = props =>\r\n{\r\n    \r\n    return (\r\n            <React.Fragment>\r\n            <div onClick = {props.changeModalState}>\r\n                <Backdrop/>\r\n            </div>\r\n            <div className={classes.mapDiv}>\r\n                <header>\r\n                    {props.modalHeader}\r\n                </header>\r\n                <main>\r\n                    {props.modalMain}\r\n                </main>\r\n                <footer>\r\n                    {props.mapModal && <button onClick = {props.changeModalState}>CLOSE</button>}\r\n                    {props.deleteModal && <button onClick = {props.changeModalState}>CANCEL</button>}\r\n                    {props.deleteModal && <button onClick = {props.deletePlace}>DELETE</button>}\r\n                </footer>\r\n            </div>\r\n            </React.Fragment>\r\n            )   \r\n}\r\n\r\nexport default Modal;","import React , {useState , useContext} from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport Backdrop from '../../Shared/Components/Backdrop/Backdrop';\r\nimport {AuthContext} from '../../Shared/Contexts/Authentication-Context';\r\nimport Modal from '../../Shared/Components/Modal/Modal';\r\nimport classes from './PlaceItem.module.css';\r\n\r\nconst PlaceItem = props =>\r\n{\r\n    const dispatchPlaceDeleted = useDispatch()\r\n    const Authenticated = useContext(AuthContext);\r\n    const uid = useParams().uid;\r\n    const [deleting , setDeleting] = useState(false);\r\n    const [showDeleteModal , setShowDeleteModal] = useState(false);\r\n\r\n    const showDeleteModalhandler = () =>\r\n    {\r\n        setShowDeleteModal(!showDeleteModal);        \r\n    }\r\n    const deletePlaceHandler = async () =>\r\n    {\r\n        setDeleting(true);\r\n        try \r\n        {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL.split(';')[0]}/places/${props.id}`,\r\n            {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type'   :   'application/json',\r\n                            Authorization   :   \"Bearer \" + Authenticated.userToken},\r\n            });\r\n            const responseData = await response.json();\r\n            if(!response.ok)\r\n            {   \r\n                setDeleting(false);\r\n                showDeleteModalhandler();\r\n                alert(responseData.errorCode +\"\\n\" + responseData.errorMsg)\r\n            }\r\n            else\r\n            {\r\n                setDeleting(false);\r\n                dispatchPlaceDeleted({  type : 'PLACE_DELETED' })\r\n                props.onDelete();\r\n            }\r\n        } catch (error) { setDeleting(false); alert(error)  }\r\n    }\r\n\r\n    const deleteModalHeader   = <h4>Are You Sure</h4>;\r\n    const deleteModalMain     = <React.Fragment>\r\n                                    <p>Do You Want to proceed For Deleting The Specified Place </p> \r\n                                    <p style={{border : '3px solid #c20e0e4c '}}><b>Caution : </b>Once a Place is Deleted It cannot be Undone</p>\r\n                                </React.Fragment>\r\n    return(\r\n        <React.Fragment>\r\n            {showDeleteModal && <Modal\r\n                modalHeader = {deleteModalHeader}\r\n                modalMain   = {deleteModalMain}\r\n                deleteModal = {true}\r\n                changeModalState = {showDeleteModalhandler}\r\n                deletePlace      = {deletePlaceHandler}\r\n            />}\r\n            {deleting && \r\n            <Backdrop>\r\n                <Spinner />\r\n                <h2 style={{color:'gold'}}>Deleting Place...</h2>\r\n            </Backdrop>\r\n            }\r\n            <li>\r\n                <div className = {classes.onePlace}>\r\n                    <div>\r\n                        <img src = {props.image} alt=''/>\r\n                    {/* <img src={`${process.env.REACT_APP_ASSET_URL.split(';')[0]}/${props.image}`} alt='' /> */}\r\n                    </div>\r\n                    <div className = {classes.description}>\r\n                        <h4>{props.title}</h4>\r\n                        <h5>{props.address}</h5>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className = {classes.onePlaceBtns}>\r\n                        \r\n                    <Link to={`/places/${props.id}/detail`}><button className='btn btn-dark m-1' >VIEW DETAIL</button></Link> \r\n                {Authenticated.userId===uid && (\r\n                    <button className='btn btn-danger m-1' onClick = {showDeleteModalhandler}>DELETE</button>  \r\n                )}\r\n                    </div>\r\n                </div>\r\n                \r\n            </li>\r\n            \r\n        </React.Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default PlaceItem;","import React from 'react';\r\n\r\nimport Card from '../../Shared/Components/Card/Card';\r\nimport PlaceItem from './PlaceItem'; \r\n\r\n import classes from './PlacesList.module.css';\r\n\r\n\r\nconst PlacesList = props =>\r\n{\r\n    if(props.userPlaces.length === 0)\r\n    {\r\n        return <Card> \r\n                    <h4>No Place Found... </h4>\r\n                    \r\n                </Card>\r\n    }\r\n    else \r\n    return(\r\n        <ul className={classes.placesList}>\r\n            {props.userPlaces.map( onePlace => \r\n            {return <PlaceItem \r\n                    key     = {onePlace.P_ID}\r\n                    id      = {onePlace.P_ID}\r\n                    image   = {onePlace.P_Image}\r\n                    title   = {onePlace.P_Title}\r\n                    desc    = {onePlace.P_Description}\r\n                    address = {onePlace.P_Address}\r\n                    creator = {onePlace.creator}\r\n                    onDelete= {props.onDeletePlace}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PlacesList;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport PlacesList from '../Components/PlacesList';\r\nimport classes from './UserPlaces.module.css';\r\n\r\nconst UserPlaces = props =>\r\n{\r\n    const[errorMessage, setErrorMessage] = useState();\r\n    const placesFetched = useSelector( state => state.placesFetched);\r\n    const[placesLoadingState, setPlacesLoadingState] = useState(!placesFetched);\r\n\r\n    const userId = useParams().uid;\r\n    const dispatchUsersPlaces = useDispatch();\r\n    const userPlaces = useSelector( state => state.allPlaces.filter( place => place.userUID.toString() === userId));\r\n    \r\n    const getPlaceByUserId = useCallback(async () =>\r\n    {   \r\n        try \r\n        {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL.split(';')[0]}/places`);\r\n            const places = await response.json();\r\n            \r\n            setPlacesLoadingState(false);\r\n            if(response.ok)\r\n            dispatchUsersPlaces({   type : 'PLACES_FETCHED',   value : places    })\r\n            // else    throw new Error(places.errorMsg)\r\n            \r\n        } catch (error) { setErrorMessage(error.message); setPlacesLoadingState(false);  }\r\n    },[dispatchUsersPlaces])\r\n    const deletePlaceHandler = () =>\r\n    {\r\n        setPlacesLoadingState(true)\r\n        getPlaceByUserId();\r\n    }\r\n    \r\n    useEffect(()=>\r\n    {\r\n        if(!placesFetched) getPlaceByUserId() ;\r\n    },[placesFetched,getPlaceByUserId])\r\n    \r\n    return  <>\r\n                {placesLoadingState && \r\n                    <div className = {classes.spinnerCenter}>\r\n                        <Spinner />\r\n                        <h2>Loading...</h2>\r\n                    </div>\r\n                }\r\n                {!placesLoadingState &&\r\n                    <div className={classes.center}>\r\n                        <PlacesList userPlaces = {userPlaces} onDeletePlace={deletePlaceHandler} error = {errorMessage}/>\r\n                    </div> \r\n                }\r\n            </> \r\n    \r\n}\r\n\r\n\r\n\r\nexport default UserPlaces;","import React, { useState,useEffect, useContext, useCallback } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Input from '../../Shared/Components/UI Element/Input';\r\nimport {AuthContext} from '../../Shared/Contexts/Authentication-Context';\r\nimport {useForm} from '../../Shared/Hooks/Form-Hook';\r\nimport {MIN_LENGTH_VALIDATOR} from '../../Shared/Util/Validators/Validator';\r\nimport Card from '../../Shared/Components/Card/Card';\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport Backdrop from '../../Shared/Components/Backdrop/Backdrop';\r\nimport classes from './NewPlaces.module.css'\r\n\r\n\r\nconst UpdatePlace = props =>\r\n{\r\n    const dispatchPlaceUpdated = useDispatch();\r\n    const Authenticated = useContext(AuthContext);\r\n    const history = useHistory();\r\n    \r\n    const uid = Authenticated.userId;\r\n    const pID = useParams().pID;\r\n\r\n    const [place, setPlace] = useState();\r\n    const [updating, setUpdating] = useState(false);\r\n    const place2BeUpdated = useSelector( state => state.allPlaces.find( place => place.P_ID.toString() === pID));\r\n  \r\n    const [formState , inputChangeHandle, dataSetter] = useForm({\r\n        title : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        description : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n    } , false)\r\n    \r\n    const getPlaceById = useCallback( async () =>\r\n        {\r\n            if(place2BeUpdated)\r\n            {  \r\n                dataSetter(\r\n                {\r\n                    title : {\r\n                        inputValue : place2BeUpdated.P_Title,\r\n                        inputisValid : true\r\n                    },\r\n                    description : {\r\n                        inputValue : place2BeUpdated.P_Description,\r\n                        inputisValid : true\r\n                    },\r\n                } , true)\r\n                setPlace(place2BeUpdated);\r\n            }\r\n        },[place2BeUpdated,dataSetter])\r\n\r\n        \r\n    useEffect(()=>\r\n    {  \r\n        getPlaceById();\r\n    },[getPlaceById])\r\n\r\n    const submitUpdatedPlace = async (e) =>\r\n    {\r\n        e.preventDefault();\r\n        try \r\n        {   setUpdating(true);\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL.split(';')[0]}/places/${pID}`,\r\n            {\r\n                method: 'PATCH',\r\n                headers: { 'Content-Type' : 'application/json',\r\n                            Authorization :  \"Bearer \" + Authenticated.userToken+'s'},\r\n                body: JSON.stringify(\r\n                    {\r\n                        title : formState.inputs.title.inputValue,\r\n                        description : formState.inputs.description.inputValue,\r\n                    }\r\n                )\r\n            });\r\n            const responseData = await response.json();\r\n\r\n            if(!response.ok)\r\n            {\r\n                if(responseData.errorCode===401) Authenticated.logout()\r\n                setUpdating(false);\r\n                history.push(`/${uid}/places`);\r\n                alert(responseData.errorCode+\"\\n\"+responseData.errorMsg)\r\n            }\r\n            else\r\n            {   \r\n                setUpdating(false);\r\n                dispatchPlaceUpdated({ type : 'PLACE_UPDATED'});\r\n                history.push(`/${uid}/places`)\r\n            }  \r\n        } \r\n        catch (error) { setUpdating(false); alert(error) }\r\n    }\r\n\r\n    if(!place) return   <Card>   <h4>Loading...</h4>  </Card>\r\n    \r\n    else\r\n    return(\r\n        <div className={classes.center}>\r\n            {updating && \r\n            <Backdrop>\r\n                <Spinner />\r\n                <h2 style={{color:'gold'}}>Updating...</h2>\r\n            </Backdrop>\r\n            }\r\n            <form className = {classes.addPlaceFORM} onSubmit = {submitUpdatedPlace}>\r\n\r\n                <Input  \r\n                    id = \"title\" type = \"Input\" Label = \"Title\" initialValue = {formState.inputs.title.inputValue}\r\n                    pHolder = \"Enter The Name of Place\" isValid = {formState.inputs.title.inputisValid} \r\n                    Error = \"Please Enter a Valid Title with MINIMUM LENGTH of 5\" onInputChange = {inputChangeHandle}\r\n                    validators = {[MIN_LENGTH_VALIDATOR(5)]} \r\n                />\r\n\r\n                <Input  \r\n                    id = \"description\" type = \"TextArea\" Label = \"Description\" initialValue = {formState.inputs.description.inputValue}\r\n                    pHolder = \"Enter Description for Selected Place\"  isValid = {formState.inputs.description.inputisValid} \r\n                    Error = \"Please Enter a Valid Description with MINIMUM LENGTH of 5\" onInputChange = {inputChangeHandle}\r\n                    validators = {[MIN_LENGTH_VALIDATOR(5)]} \r\n                />\r\n\r\n                <button disabled={!formState.formIsValid} className = {`btn ${formState.formIsValid ? 'btn-outline-success' : 'btn-danger'}`}>\r\n                UPDATE PLACE\r\n                </button>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default UpdatePlace;","import React, { useContext } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {AuthContext} from '../../Shared/Contexts/Authentication-Context';\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport classes from './PlaceDetail.module.css';\r\n\r\n\r\nconst DetailPlace = props =>\r\n{\r\n    const pID = useParams().pID;\r\n  \r\n    const Authenticated = useContext(AuthContext);\r\n    var place;\r\n    \r\n    const dispatchUsersPlaces = useDispatch();\r\n    place = useSelector( state => state.allPlaces.find( place => place.P_ID.toString() === pID))\r\n    const getPlaces = async () =>\r\n    {          \r\n        try \r\n        {\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL.split(';')[0]}/places`);\r\n            const places = await response.json();\r\n            \r\n            if(response.ok)\r\n            dispatchUsersPlaces({   type : 'PLACES_FETCHED',   value : places    })\r\n            \r\n        } catch (error) {   alert(error) }\r\n    }\r\n\r\n    if(!place) getPlaces();\r\n\r\n    if(!place) \r\n    return <div className = {classes.spinnerCenter}>\r\n                <Spinner />\r\n                <h2>Loading...</h2>\r\n            </div>\r\n    \r\n    else                        \r\n    return(\r\n        <React.Fragment>\r\n\r\n        <div className = {classes.center}>\r\n            <div className={`row  ${classes.placeDetail}`}>\r\n                <div className='col-12 p-0'>\r\n                    <img src = {place.P_Image} alt=''/>                \r\n                    {/* <img src={`${process.env.REACT_APP_ASSET_URL.split(';')[0]}/${place.P_Image}`} alt='' /> */}\r\n                </div>\r\n                <div className='col-12 text-center pt-3'>\r\n                    <h4>{place.P_Title}</h4>\r\n                </div>\r\n                <div className='col-12 text-center pt-3'>\r\n                    <h5>{place.P_Address}</h5>\r\n                </div>\r\n                <div className='col-12 text-center pt-3'>\r\n                    <p style={{whiteSpace: 'pre-wrap', textAlign:'left'}}>{place.P_Description}</p>\r\n                </div>\r\n                <div className='row w-100 m-0 justify-content-center'>\r\n                    \r\n                {Authenticated.userId===place.userUID.toString() && (\r\n                    <div className='col-12 col-md-6 pl-md-1 order-md-1'>\r\n                        <Link to={`/places/${place.P_ID}/update`}><button className='btn btn-success w-100 mb-2'>EDIT</button></Link> \r\n                    </div>\r\n                )}                    \r\n                   \r\n                    <div className='col-12 col-md-6 pr-md-1  '>\r\n                        <Link to={`/${place.userUID}/places`}><button className='btn btn-outline-dark w-100 mb-2'>GO BACK</button></Link>                                \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default DetailPlace;","import React from 'react';\r\n\r\nimport classes from './MainHeader.module.css';\r\n\r\nconst MainHeader = (props) =>\r\n{\r\n    return(\r\n        <header  className={classes.mainHeader}>{props.children}</header>\r\n    )\r\n}\r\n\r\nexport default MainHeader;","import React , {useContext} from 'react';\r\n\r\nimport {NavLink} from 'react-router-dom';\r\nimport {AuthContext} from '../../Contexts/Authentication-Context';\r\nimport classes from './NavLinks.module.css';\r\n\r\nconst NavLinks = props =>\r\n{\r\n    const Authenticated = useContext(AuthContext);\r\n    const uid = Authenticated.userId;\r\n    const signOUT = () =>\r\n    {\r\n        Authenticated.logout()\r\n    }\r\n\r\n    return  <ul className={classes.navLinks}>\r\n                <li className={classes.navLink}>\r\n                    <NavLink to='/'>ALL USERS</NavLink>\r\n                </li>\r\n                {Authenticated.loggedIn &&  (\r\n                <React.Fragment>\r\n                <li className={classes.navLink}>\r\n                    <NavLink to={`/${uid}/places`}>MY PLACES</NavLink>\r\n                </li> \r\n                <li className={classes.navLink}>\r\n                    <NavLink to='/places/new'>ADD PLACE</NavLink>\r\n                </li>\r\n                <li className={classes.navLink}>\r\n                    <NavLink to='/' onClick={signOUT}>SIGN OUT</NavLink>\r\n                </li> \r\n                </React.Fragment>\r\n                 )}\r\n                {!Authenticated.loggedIn &&  (\r\n                <React.Fragment>\r\n                <li className={classes.navLink}>\r\n                    <NavLink to='/login'>SIGN IN</NavLink>\r\n                </li>\r\n                <li className={classes.navLink}>\r\n                    <NavLink to='/signup'>SIGN UP</NavLink>\r\n                </li> \r\n                </React.Fragment>\r\n                 )}\r\n            </ul>\r\n}\r\n\r\nexport default NavLinks;","import React from 'react';\r\n\r\nimport NavLinks from '../MainNvigation/NavLinks';\r\nimport classes from './SideDrawer.module.css';\r\n\r\nconst SideDrawer = props =>\r\n{\r\n    return <div className={classes.sideDrawer} onClick = {props.drawerClicked}><NavLinks/></div>    \r\n}\r\n\r\nexport default SideDrawer;","import React , {useState, useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport {AuthContext} from '../../Contexts/Authentication-Context';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () =>\r\n{\r\n    const Authenticated = useContext(AuthContext);\r\n    const uImage = Authenticated.userImage;\r\n\r\n    const [drawerState , setDrawerState] = useState(false)\r\n    const DrawerHandler = () =>\r\n    {\r\n        setDrawerState(!drawerState);\r\n    }\r\n    var S_Drawer = (<div className={classes.sideDrawer}>\r\n                        <SideDrawer drawerClicked = {DrawerHandler}/>\r\n                        <Backdrop backdropClicked = {DrawerHandler}/>\r\n                    </div>)\r\n    var imgORtext = Authenticated.loggedIn ? <img src={uImage} alt='' /> : <b>USER PLACES</b>;\r\n    return(\r\n        <MainHeader>\r\n            {drawerState ? S_Drawer : null}\r\n                <button className={classes.menuBtn} onClick = {DrawerHandler}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                </button>\r\n                <div className={classes.mainNavTitle}>\r\n                    <Link to=''>\r\n                        {imgORtext}\r\n                    </Link>\r\n                </div>\r\n            <div className={classes.navLinks}>\r\n                <NavLinks/>\r\n            </div>\r\n        </MainHeader>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;","import React, { useRef, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport classes from './BioData.module.css';\nimport 'react-calendar/dist/Calendar.css';\n\nconst BioData = props => {\n  const provinces = ['AJK', 'Balochistan', 'GB', 'KPK', 'Sindh', 'Punjab'];\n  const qualification = ['Matric', 'Intermediate', 'Graduation', 'Masters', 'PhD']\n  const games = ['Cricket', 'Hockey', 'Volleyball', 'Baseball', 'Football',]\n\n  const inputRef = useRef();\n  const gamesRef = useRef();\n\n  const [showCalendar, setShowCalendar] = useState();\n  const [showGames, setShowGames] = useState();\n  const [progress, setProgress] = useState(0);\n  const [showProgress, setShowProgress] = useState();\n\n  const [formState, setFormState] = useState({\n    fName: '', lName: '', image: '', CNIC: '', CNICDate: '', phNumber: '', email: '', province: '',\n    relegion: '', description: '', qualification: '', DOB: 'Please Choose Your Date Of Birth', languages: [], gender: '',\n    password: '', cPassword: '', games: []\n  });\n\n  const inputChangeHandler = (e, id) => {\n    if (!id) return\n    const pState = { ...formState };\n    pState[id] = e.target ? e.target.value : e;\n    console.log(pState[id])\n    setFormState(pState)\n  }\n\n\n  const inputElement = (id, label, placeholder, min, max, type, req, pattren) => {\n    return <div className={classes.inputDiv}>\n      <label htmlFor={id}>{label}</label>\n      <input placeholder={placeholder} minLength={min} maxLength={max} id={id} name={id} type={type} required={req} pattern={pattren} list={id + 'list'}\n        onChange={(e) => inputChangeHandler(e, id)} />\n    </div>\n  }\n\n  const checkboxHandler = e => {\n    const pState = { ...formState };\n    const exist = pState.languages.find((v, i, a) => { if (v === e.target.value) { a.splice(i, 1); return true } else return false });\n    if (!exist) pState.languages.push(e.target.value);\n\n    setFormState(pState)\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(formState)\n  }\n\n  const pickImageHandler = () => {\n    inputRef.current.click()\n  }\n\n  const imageChangeHandler = () => {\n    setShowProgress(true);\n    setProgress(0)\n    console.log(progress)\n\n      const file = inputRef.current.files[0];\n      const fileReader = new FileReader();\n\n      const pState = { ...formState };\n\n      fileReader.onprogress = e =>\n      { setProgress(((e.loaded/e.total)*100).toFixed(0))\n      }\n      \n      fileReader.onloadend = e => {\n        pState.image = fileReader.result;\n        setFormState(pState)\n        setShowProgress(false)\n      }\n      if (file) fileReader.readAsDataURL(file);\n\n      \n\n  }\n\n  const createCheckboxOrRadioInput = (type, id, name, value, label) => {\n    return <>\n      <input type={type} id={id} name={name} value={value} />\n      <label htmlFor={id}>{label}</label> <br />\n    </>\n  }\n\n  const gamesSelector = () => {\n    if (gamesRef.current) {\n      inputChangeHandler([...gamesRef.current.selectedOptions].map(op => op.value), 'games')\n      setShowGames(!showGames)\n    }\n  }\n  return <>\n\n    <div className={classes.outerDiv}>\n\n      <input ref={inputRef} type='file' onChange={imageChangeHandler} accept='.jpg, .jpeg, .png' style={{ display: 'none' }}></input>\n      <form onSubmit={submitHandler}>\n        <h3>Enter Your Bio Data</h3>\n        <div className={classes.imgChooser} onClick={pickImageHandler}>\n          {(formState.image && !showProgress) ? <img src={formState.image} alt='DP' /> : <b>Please Choose an Image</b>}\n          {showProgress && < div className={classes.Progress}>\n            <div style={{width: progress + '%'}}><b>{progress}%</b></div>\n          </div>}\n        </div>\n        {inputElement('fName', 'First Name', 'Enter Your First Name', 5, 40, 'text', true)}\n        {inputElement('lName', 'Last Name', 'Enter Your Last Name', 5, 40, 'text', true)}\n        {inputElement('CNIC', 'CNIC', 'XXXXX-XXXXXXX-X', 15, 15, 'text', true, '^[0-9+]{5}-[0-9+]{7}-[0-9]{1}$')}\n        {inputElement('CNICDate', 'CNIC Issuance Date and Time', 'Please Choose A Date and Time', 5, 15, 'datetime-local', true)}\n\n        {inputElement('phNumber', 'Mobile', '03xx-xxxxxxx', 12, 12, 'text', true, '03[0-9]{2}-[0-9]{7}')}\n        {inputElement('email', 'Email', 'Enter Your Email', 5, 50, 'email', true)}\n\n        <div className={classes.selector}>\n          <label>Select Your Province or State</label>\n          <select required value={formState.province} onChange={(e) => inputChangeHandler(e, 'province')}>\n            <option value=''>Select Your Province</option>\n            {provinces.map(p => <option key={p} value={p}>{p}</option>)}\n          </select>\n        </div>\n\n        <div className={classes.games}>\n          <label>Select Your Faviourites Games </label>\n          <div>\n            <span onClick={() => setShowGames(!showGames)}>{formState.games.length <= 0 ? 'Please Select Games' : formState.games.join()}</span>\n            <button type='button' onClick={gamesSelector} >Select</button>\n          </div>\n          {showGames && <select ref={gamesRef} multiple>\n            {games.map(game => <option key={game} value={game}>{game}</option>)}\n          </select>}\n        </div>\n\n        <fieldset>\n          <legend>Relegion:</legend>\n          <div className={classes.fieldsetDiv} onChange={e => inputChangeHandler(e, 'relegion')}>\n            {createCheckboxOrRadioInput('radio', 'islam', 'relegion', 'Islam', 'Islam')}\n            {createCheckboxOrRadioInput('radio', 'christianity', 'relegion', 'Christianity', 'Christianity')}\n            {createCheckboxOrRadioInput('radio', 'hinduism', 'relegion', 'Hinduism', 'Hinduism')}\n            {createCheckboxOrRadioInput('radio', 'buddhism', 'relegion', 'Buddhism', 'Buddhism')}\n            {createCheckboxOrRadioInput('radio', 'sikhism', 'relegion', 'Sikhism', 'Sikhism')}\n            {createCheckboxOrRadioInput('radio', 'atheist', 'relegion', 'Atheist', 'Atheist')}\n            {createCheckboxOrRadioInput('radio', 'Other', 'relegion', 'Other', 'Other')}\n          </div>\n        </fieldset>\n\n        <div>\n          {inputElement('qualification', 'Enter Your Highest Qualification', 'Highest Qualification', 2, 50, 'tetx', true)}\n          <datalist id='qualificationlist'>\n            {qualification.map(q => <option key={q} value={q} />)}\n          </datalist>\n        </div>\n\n        <div>\n          <label>Choose Your DOB</label>\n          <div className={classes.dob} >\n            <p onClick={() => setShowCalendar(!showCalendar)} style={{ width: '100%' }}>{formState.DOB || 'Choose a Date'} </p>\n            {showCalendar &&\n              <Calendar\n                className={classes.calendar}\n                onClickDay={d => { setShowCalendar(!showCalendar); inputChangeHandler(d.toLocaleDateString('en-GB'), 'DOB') }}\n                minDate={props.minDate || new Date('1971, 12, 16')}\n              />}\n          </div>\n        </div>\n        <fieldset>\n          <legend>Favourite Languages:</legend>\n          <div onChange={checkboxHandler} className={classes.fieldsetDiv}>\n            {createCheckboxOrRadioInput('checkbox', 'JavaScript', 'JavaScript', 'Java Script', 'Java Script')}\n            {createCheckboxOrRadioInput('checkbox', 'React', 'React', 'React', 'React JS')}\n            {createCheckboxOrRadioInput('checkbox', 'Node', 'Node', 'Node', 'Node JS')}\n            {createCheckboxOrRadioInput('checkbox', 'Python', 'Python', 'Python', 'Python')}\n            {createCheckboxOrRadioInput('checkbox', 'C', 'C', 'C', 'C, C++')}\n          </div>\n        </fieldset>\n\n        <div className={classes.tArea}>\n          <label>Description</label>\n          <textarea value={formState.description} onChange={(e) => inputChangeHandler(e, 'description')} rows={5}></textarea>\n        </div>\n\n        {inputElement('password', 'Password', 'Enter Your Password', 5, 50, 'password', true)}\n        {inputElement('cPassword', 'Conform Password', 'Conform Your Password', 5, 50, 'password', true)}\n\n        <fieldset>\n          <legend>Gender:</legend>\n          <div className={classes.fieldsetDiv} onChange={e => inputChangeHandler(e, 'gender')}>\n            {createCheckboxOrRadioInput('radio', 'male', 'gender', 'Male', 'Male')}\n            {createCheckboxOrRadioInput('radio', 'female', 'gender', 'Female', 'Female')}\n            {createCheckboxOrRadioInput('radio', 'other', 'gender', 'Other', 'Other')}\n          </div>\n        </fieldset>\n\n\n        <button className={classes.submitBtn} type='submit'>SUBMIT DATA</button>\n      </form>\n    </div>\n\n  </>\n}\nexport default BioData;","const initialState = {\r\n    allUsers : [],\r\n    allPlaces : [],\r\n    usersFetched : false,\r\n    placesFetched : false,\r\n}\r\n\r\nconst reducer = (state = initialState, action)  =>\r\n{   \r\n    switch(action.type)\r\n    {\r\n        case 'USERS_FETCHED' :\r\n        return{\r\n            ...state,\r\n            allUsers: action.value,\r\n            usersFetched : true\r\n        }\r\n        case 'PLACES_FETCHED' :\r\n        return{\r\n            ...state,\r\n            allPlaces: action.value,\r\n            placesFetched : true,\r\n        }\r\n        case 'SIGN_UP' :\r\n        return{\r\n            ...state,\r\n            usersFetched : false\r\n        }\r\n        case 'NEW_PLACE_ADDED':\r\n        return{\r\n            ...state,\r\n            usersFetched : false,\r\n            placesFetched : false,\r\n        }\r\n        case 'PLACE_DELETED':\r\n        return{\r\n            ...state,\r\n            usersFetched : false,\r\n            placesFetched : false,\r\n        }\r\n        case 'PLACE_UPDATED':\r\n        return{\r\n            ...state,\r\n            placesFetched : false,\r\n        }\r\n        default:\r\n        return state\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Reducer from './stateStore/reducer';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst Store = createStore(Reducer);\n\nReactDOM.render(<Provider store= {Store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}