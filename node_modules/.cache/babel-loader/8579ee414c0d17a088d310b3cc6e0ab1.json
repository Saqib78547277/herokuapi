{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Deer\\\\Downloads\\\\New folder\\\\src\\\\Shared\\\\Components\\\\UI Element\\\\ImageInput.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport classes from './ImageInput.module.css';\n\nconst ImageInput = props => {\n  const [image, setImage] = useState(); //   const [validImage , setValidImage] = useState(false);\n\n  const [imagePreview, setImagePreview] = useState();\n  const fileInputRef = useRef();\n  useEffect(() => {\n    if (!image) return;\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(image);\n\n    fileReader.onload = () => {\n      setImagePreview(fileReader.result);\n    };\n  }, [image]);\n\n  const pickImageHandler = () => {\n    fileInputRef.current.click();\n  };\n\n  const imagePickedHandler = e => {\n    let pickedImage, pickedImageISValid;\n\n    if (e.target.files && e.target.files.length === 1) {\n      pickedImage = e.target.files[0];\n      setImage(pickedImage); //setValidImage(true);\n\n      if (pickedImage.size > 5242880) alert(`WARRNING \\nImage is too Large\\nPlease Replace with another one\\nMAXIMUM IMAGE SIZE = ${props.maxSize || 5}MB`);\n      pickedImageISValid = true;\n    } else if (image) return;else pickedImageISValid = false;\n\n    props.onInputChange(props.id, pickedImage, pickedImageISValid);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: \"file\",\n    ref: fileInputRef,\n    accept: \".jpg, .jpeg, .png,\",\n    style: {\n      display: 'none'\n    },\n    onChange: imagePickedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imgDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: pickImageHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, imagePreview && /*#__PURE__*/React.createElement(\"img\", {\n    src: imagePreview,\n    style: {\n      maxHeight: props.height\n    },\n    alt: \"PREVIEW\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 39\n    }\n  }), !imagePreview && /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      maxHeight: props.height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 42\n    }\n  }, \"Please Pick an Image\")))));\n};\n\nexport default ImageInput;","map":{"version":3,"sources":["C:/Users/John Deer/Downloads/New folder/src/Shared/Components/UI Element/ImageInput.js"],"names":["React","useRef","useState","useEffect","classes","ImageInput","props","image","setImage","imagePreview","setImagePreview","fileInputRef","fileReader","FileReader","readAsDataURL","onload","result","pickImageHandler","current","click","imagePickedHandler","e","pickedImage","pickedImageISValid","target","files","length","size","alert","maxSize","onInputChange","id","display","imgDiv","maxHeight","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IACxB;AACI,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBN,QAAQ,EAAnC,CADJ,CAEC;;AACG,QAAM,CAACO,YAAD,EAAgBC,eAAhB,IAAmCR,QAAQ,EAAjD;AACA,QAAMS,YAAY,GAAGV,MAAM,EAA3B;AAEAE,EAAAA,SAAS,CAAE,MACX;AACI,QAAG,CAACI,KAAJ,EAAW;AACX,UAAMK,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,aAAX,CAAyBP,KAAzB;;AACAK,IAAAA,UAAU,CAACG,MAAX,GAAoB,MACpB;AACIL,MAAAA,eAAe,CAACE,UAAU,CAACI,MAAZ,CAAf;AACH,KAHD;AAIH,GATQ,EASP,CAACT,KAAD,CATO,CAAT;;AAWA,QAAMU,gBAAgB,GAAG,MACzB;AACIN,IAAAA,YAAY,CAACO,OAAb,CAAqBC,KAArB;AACH,GAHD;;AAIA,QAAMC,kBAAkB,GAAGC,CAAC,IAC5B;AACI,QAAIC,WAAJ,EAAkBC,kBAAlB;;AACA,QAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkBJ,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,MAAf,KAAwB,CAA7C,EACA;AACIJ,MAAAA,WAAW,GAAID,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;AACAjB,MAAAA,QAAQ,CAACc,WAAD,CAAR,CAFJ,CAGI;;AACA,UAAGA,WAAW,CAACK,IAAZ,GAAmB,OAAtB,EAA+BC,KAAK,CAAE,wFAAuFtB,KAAK,CAACuB,OAAN,IAAe,CAAE,IAA1G,CAAL;AAC/BN,MAAAA,kBAAkB,GAAG,IAArB;AACH,KAPD,MAQK,IAAGhB,KAAH,EAAU,OAAV,KACCgB,kBAAkB,GAAG,KAArB;;AACNjB,IAAAA,KAAK,CAACwB,aAAN,CAAoBxB,KAAK,CAACyB,EAA1B,EAA8BT,WAA9B,EAA2CC,kBAA3C;AACH,GAdD;;AAeA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,EAAE,EAAEjB,KAAK,CAACyB,EADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,GAAG,EAAIpB,YAHX;AAII,IAAA,MAAM,EAAC,oBAJX;AAKI,IAAA,KAAK,EAAE;AAACqB,MAAAA,OAAO,EAAG;AAAX,KALX;AAMI,IAAA,QAAQ,EAAIZ,kBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAAC6B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAwB,IAAA,OAAO,EAAIhB,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,YAAY,iBAAK;AAAK,IAAA,GAAG,EAAEA,YAAV;AAAwB,IAAA,KAAK,EAAE;AAACyB,MAAAA,SAAS,EAAE5B,KAAK,CAAC6B;AAAlB,KAA/B;AAA2D,IAAA,GAAG,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,EAEK,CAAC1B,YAAD,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAI,IAAA,KAAK,EAAE;AAACyB,MAAAA,SAAS,EAAE5B,KAAK,CAAC6B;AAAlB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,CAFtB,CADJ,CAVJ,CADJ;AAmBH,CAxDD;;AA0DA,eAAe9B,UAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport classes from './ImageInput.module.css';\r\n\r\nconst ImageInput = props =>\r\n{\r\n    const [image , setImage] = useState();\r\n //   const [validImage , setValidImage] = useState(false);\r\n    const [imagePreview , setImagePreview] = useState();\r\n    const fileInputRef = useRef();\r\n\r\n    useEffect( () =>\r\n    {\r\n        if(!image) return\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(image);\r\n        fileReader.onload = () => \r\n        {\r\n            setImagePreview(fileReader.result);\r\n        }\r\n    },[image])\r\n\r\n    const pickImageHandler = () =>\r\n    {\r\n        fileInputRef.current.click();\r\n    }\r\n    const imagePickedHandler = e =>\r\n    {\r\n        let pickedImage , pickedImageISValid;\r\n        if(e.target.files && e.target.files.length===1)\r\n        {\r\n            pickedImage  = e.target.files[0];\r\n            setImage(pickedImage);\r\n            //setValidImage(true);\r\n            if(pickedImage.size > 5242880) alert(`WARRNING \\nImage is too Large\\nPlease Replace with another one\\nMAXIMUM IMAGE SIZE = ${props.maxSize||5}MB`)\r\n            pickedImageISValid = true\r\n        }\r\n        else if(image) return;\r\n        else  pickedImageISValid = false;\r\n        props.onInputChange(props.id, pickedImage, pickedImageISValid)\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <input \r\n                id={props.id} \r\n                type='file' \r\n                ref = {fileInputRef}\r\n                accept='.jpg, .jpeg, .png,' \r\n                style={{display : 'none'}}\r\n                onChange = {imagePickedHandler}\r\n            />\r\n\r\n            <div className={classes.imgDiv}>\r\n                <button type='button'   onClick = {pickImageHandler}>\r\n                    {imagePreview &&  <img src={imagePreview} style={{maxHeight: props.height}}  alt='PREVIEW'/>}\r\n                    {!imagePreview && <b><p  style={{maxHeight: props.height}}>Please Pick an Image</p></b>}\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n    ) \r\n}\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}