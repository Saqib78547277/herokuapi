{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Deer\\\\Downloads\\\\New folder\\\\src\\\\Authentication\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route, useLocation } from 'react-router';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const {\n    U_ID,\n    U_Token\n  } = useSelector(state => {\n    var _state$users;\n\n    return state === null || state === void 0 ? void 0 : (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.loggedin_user;\n  }) || {};\n  const authenticated = !!U_ID && !!U_Token;\n  const location = useLocation();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => authenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          to: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/John Deer/Downloads/New folder/src/Authentication/PrivateRoute.js"],"names":["React","useSelector","Redirect","Route","useLocation","PrivateRoute","component","Component","rest","U_ID","U_Token","state","users","loggedin_user","authenticated","location","props","pathname","to"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,WAA1B,QAA6C,cAA7C;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAsC;AACvD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBT,WAAW,CAAEU,KAAK;AAAA;;AAAA,WAAIA,KAAJ,aAAIA,KAAJ,uCAAIA,KAAK,CAAEC,KAAX,iDAAI,aAAcC,aAAlB;AAAA,GAAP,CAAX,IAAsD,EAAhF;AACA,QAAMC,aAAa,GAAG,CAAC,CAACL,IAAF,IAAU,CAAC,CAACC,OAAlC;AACA,QAAMK,QAAQ,GAAGX,WAAW,EAA5B;AACA,sBAAO,oBAAC,KAAD,oBACCI,IADD;AAEH,IAAA,MAAM,EAAGQ,KAAK,IAAIF,aAAa,gBAC3B,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD2B,gBAE3B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBN,QAAAA,KAAK,EAAE;AAAEO,UAAAA,EAAE,EAAEH;AAAN;AAA7B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAMH,CAVD;;AAYA,eAAeV,YAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route, useLocation } from 'react-router';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest}) => {\r\n    const { U_ID, U_Token } = useSelector( state => state?.users?.loggedin_user) || {}\r\n    const authenticated = !!U_ID && !!U_Token;\r\n    const location = useLocation();\r\n    return <Route\r\n        {...rest}\r\n        render={ props => authenticated ?\r\n            <Component {...props} /> :\r\n            <Redirect to={{ pathname: '/login', state: { to: location } }} />}\r\n        />\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}