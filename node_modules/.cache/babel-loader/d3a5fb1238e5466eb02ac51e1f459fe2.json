{"ast":null,"code":"import axios from \"axios\";\nimport { LOADING_PLACES, GET_ALL_PLACES, GET_SINGLE_PLACE } from \"./TYPES\";\nexport const getUserPlaces = userId => async dispatch => {\n  dispatch(setPlacesLoading());\n\n  try {\n    const {\n      data\n    } = (await (axios === null || axios === void 0 ? void 0 : axios.get(`/places/user/${userId}`))) || {};\n    dispatch({\n      type: GET_ALL_PLACES,\n      payload: data === null || data === void 0 ? void 0 : data.Places\n    });\n  } catch (error) {\n    console.log('ERROR IN GETTING USER PLACES');\n  }\n};\nexport const getSinglePlace = placeId => async dispatch => {\n  console.log('Getting Single Place');\n  dispatch(setPlacesLoading());\n\n  try {\n    const {\n      data\n    } = (await (axios === null || axios === void 0 ? void 0 : axios.get(`/places/${placeId}`))) || {};\n    dispatch({\n      type: GET_SINGLE_PLACE,\n      payload: data\n    });\n  } catch (error) {\n    console.log('ERROR IN GETTING USER PLACES');\n  }\n};\nexport const createPlace = (placeData, uID) => async dispatch => {\n  console.log('Creating Place');\n  dispatch(setPlacesLoading());\n  const user = JSON.parse(localStorage.getItem('userData'));\n  console.log(user === null || user === void 0 ? void 0 : user.U_Token);\n\n  try {\n    const {\n      data\n    } = (await (axios === null || axios === void 0 ? void 0 : axios.post(`/places`, placeData, {\n      headers: {\n        Authorization: \"Bearer \" + (user === null || user === void 0 ? void 0 : user.U_Token)\n      }\n    }))) || {};\n    getUserPlaces(uID);\n  } catch (error) {\n    console.log('ERROR IN GETTING USER PLACES');\n  }\n};\n\nconst setPlacesLoading = () => {\n  return {\n    type: LOADING_PLACES\n  };\n};","map":{"version":3,"sources":["C:/Users/John Deer/Downloads/New folder/src/Actions/PlacesActions.js"],"names":["axios","LOADING_PLACES","GET_ALL_PLACES","GET_SINGLE_PLACE","getUserPlaces","userId","dispatch","setPlacesLoading","data","get","type","payload","Places","error","console","log","getSinglePlace","placeId","createPlace","placeData","uID","user","JSON","parse","localStorage","getItem","U_Token","post","headers","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,gBAAzC,QAAiE,SAAjE;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAM,IAAI,MAAMC,QAAN,IAAkB;AACtDA,EAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;;AACA,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,QAAMR,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAES,GAAP,CAAY,gBAAeJ,MAAO,EAAlC,CAAN,MAA8C,EAA/D;AACAC,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,cADD;AAELS,MAAAA,OAAO,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI;AAFV,KAAD,CAAR;AAIH,GAND,CAOA,OAAOC,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ,CAZM;AAcP,OAAO,MAAMC,cAAc,GAAIC,OAAO,IAAI,MAAMX,QAAN,IAAkB;AAACQ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEzDT,EAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;;AACA,MAAI;AACI,UAAM;AAAEC,MAAAA;AAAF,QAAW,QAAMR,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAES,GAAP,CAAY,WAAUQ,OAAQ,EAA9B,CAAN,MAA0C,EAA3D;AACAX,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEP,gBADD;AAELQ,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GANL,CAOA,OAAOK,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ,CAbM;AAeP,OAAO,MAAMG,WAAW,GAAI,CAACC,SAAD,EAAYC,GAAZ,KAAoB,MAAMd,QAAN,IAAkB;AAACQ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAE/DT,EAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACA,QAAMc,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAb;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEK,OAAlB;;AACA,MAAI;AACI,UAAM;AAAElB,MAAAA;AAAF,QAAW,QAAMR,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAE2B,IAAP,CAAa,SAAb,EAAuBR,SAAvB,EAAkC;AACrDS,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,aAAYR,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEK,OAAlB;AAAjB;AAD4C,KAAlC,CAAN,MAET,EAFR;AAGAtB,IAAAA,aAAa,CAACgB,GAAD,CAAb;AACH,GALL,CAMA,OAAOP,KAAP,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ,CAdM;;AAgBP,MAAMR,gBAAgB,GAAG,MAAM;AAC3B,SAAO;AACHG,IAAAA,IAAI,EAAET;AADH,GAAP;AAGH,CAJD","sourcesContent":["import axios from \"axios\"\r\nimport { LOADING_PLACES, GET_ALL_PLACES, GET_SINGLE_PLACE } from \"./TYPES\";\r\n\r\nexport const getUserPlaces =  userId => async dispatch => {\r\n    dispatch(setPlacesLoading());\r\n    try {\r\n        const { data } = await axios?.get(`/places/user/${userId}`) || {};\r\n        dispatch({\r\n            type: GET_ALL_PLACES,\r\n            payload: data?.Places\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.log('ERROR IN GETTING USER PLACES')\r\n    }\r\n}\r\n\r\nexport const getSinglePlace =  placeId => async dispatch => {console.log('Getting Single Place')\r\n\r\n    dispatch(setPlacesLoading());\r\n    try {\r\n            const { data } = await axios?.get(`/places/${placeId}`) || {};\r\n            dispatch({\r\n                type: GET_SINGLE_PLACE,\r\n                payload: data\r\n            });\r\n        }\r\n    catch (error) {\r\n        console.log('ERROR IN GETTING USER PLACES')\r\n    }\r\n}\r\n\r\nexport const createPlace =  (placeData, uID) => async dispatch => {console.log('Creating Place')\r\n\r\n    dispatch(setPlacesLoading());\r\n    const user = JSON.parse(localStorage.getItem('userData'));\r\n    console.log(user?.U_Token);\r\n    try {\r\n            const { data } = await axios?.post(`/places`, placeData, {\r\n                headers: { Authorization: \"Bearer \" + user?.U_Token },\r\n              }) || {};\r\n            getUserPlaces(uID);\r\n        }\r\n    catch (error) {\r\n        console.log('ERROR IN GETTING USER PLACES')\r\n    }\r\n}\r\n\r\nconst setPlacesLoading = () => {\r\n    return {\r\n        type: LOADING_PLACES,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}