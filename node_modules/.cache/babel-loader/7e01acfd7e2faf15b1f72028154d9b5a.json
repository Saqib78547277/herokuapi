{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Deer\\\\Downloads\\\\New folder\\\\src\\\\Shared\\\\Components\\\\UI Element\\\\Input.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport { validator } from '../../Util/Validators/Validator';\nimport classes from './Input.module.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        inputValue: action.val,\n        inputIsValid: validator(action.val, action.validators)\n      };\n\n    case \"TOUCH\":\n      return { ...state,\n        touched: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nconst Input = props => {\n  var notValidLabelClass, notValidInputClass;\n\n  if (props.rClass) {\n    notValidLabelClass = notValidInputClass = classes.gYellow;\n  } else {\n    notValidInputClass = classes.inputControl;\n    notValidLabelClass = classes.labelControl;\n  }\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    inputValue: props.initialValue || '',\n    inputIsValid: props.isValid || false,\n    touched: false\n  });\n\n  const changeHandler = e => {\n    dispatch({\n      type: \"CHANGE\",\n      val: e.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = e => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  var InputType = null;\n  props.type === \"Input\" ? InputType = /*#__PURE__*/React.createElement(\"input\", {\n    className: !inputState.inputIsValid && inputState.touched ? notValidInputClass : null,\n    type: props.fieldType || 'text',\n    placeholder: props.pHolder,\n    value: inputState.inputValue,\n    onBlur: touchHandler,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }) : InputType = /*#__PURE__*/React.createElement(\"textarea\", {\n    className: !inputState.inputIsValid && inputState.touched ? notValidInputClass : null,\n    type: \"text\",\n    rows: \"5\",\n    wrap: \"hard\",\n    placeholder: props.pHolder,\n    value: inputState.inputValue,\n    onBlur: touchHandler,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n  const {\n    onInputChange,\n    id\n  } = props;\n  const {\n    inputValue,\n    inputIsValid\n  } = inputState;\n  useEffect(() => {\n    onInputChange(id, inputValue, inputIsValid);\n  }, [id, inputValue, inputIsValid, onInputChange]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: `${!inputState.inputIsValid && inputState.touched && notValidLabelClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 104\n    }\n  }, props.Label)), InputType, !inputState.inputIsValid && inputState.touched && /*#__PURE__*/React.createElement(\"p\", {\n    className: notValidLabelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 60\n    }\n  }, props.Error));\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/John Deer/Downloads/New folder/src/Shared/Components/UI Element/Input.js"],"names":["React","useReducer","useEffect","validator","classes","inputReducer","state","action","type","inputValue","val","inputIsValid","validators","touched","Input","props","notValidLabelClass","notValidInputClass","rClass","gYellow","inputControl","labelControl","inputState","dispatch","initialValue","isValid","changeHandler","e","target","value","touchHandler","InputType","fieldType","pHolder","onInputChange","id","Label","Error"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\n\r\nimport {validator} from '../../Util/Validators/Validator';\r\nimport classes from './Input.module.css';\r\n\r\nconst inputReducer = (state , action) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"CHANGE\":\r\n        return{...state , inputValue : action.val , inputIsValid : validator(action.val , action.validators) }\r\n        \r\n        case \"TOUCH\":\r\n        return {...state , touched : true}\r\n\r\n        default:  return {...state}\r\n    }\r\n}\r\n\r\nconst Input = props =>\r\n{\r\n    var notValidLabelClass , notValidInputClass;\r\n    if(props.rClass)   { notValidLabelClass = notValidInputClass = classes.gYellow;}\r\n    else { notValidInputClass = classes.inputControl ; notValidLabelClass = classes.labelControl }\r\n   \r\n\r\n\r\n    const [inputState , dispatch ] = useReducer(\r\n        inputReducer , \r\n        {inputValue : props.initialValue || '' ,\r\n        inputIsValid : props.isValid || false , \r\n        touched : false})\r\n    \r\n    const changeHandler = (e) =>\r\n    {\r\n       dispatch({type : \"CHANGE\" , val : e.target.value , validators : props.validators});\r\n    }\r\n    const touchHandler = (e) =>\r\n    {\r\n       dispatch({type : \"TOUCH\"});\r\n    }\r\n    var InputType = null;\r\n    props.type === \"Input\" ? InputType = (\r\n    <input  className = {!inputState.inputIsValid && inputState.touched ? notValidInputClass : null} \r\n        type={props.fieldType || 'text'}          \r\n        placeholder={props.pHolder} \r\n        value = {inputState.inputValue}\r\n        onBlur={touchHandler} \r\n        onChange = {changeHandler} \r\n    />) \r\n    : InputType = (\r\n    <textarea className = {!inputState.inputIsValid && inputState.touched ? notValidInputClass : null}\r\n        type='text' rows='5' \r\n        wrap = 'hard'\r\n        placeholder={props.pHolder}\r\n        value = {inputState.inputValue}\r\n        onBlur={touchHandler} \r\n        onChange = {changeHandler}\r\n    />)\r\n    \r\n    const {onInputChange, id} = props;\r\n    const {inputValue , inputIsValid} = inputState;\r\n        useEffect( () => \r\n        {   \r\n            onInputChange(id , inputValue , inputIsValid);\r\n        }, [id , inputValue , inputIsValid , onInputChange])\r\n        \r\n\r\n    return (\r\n        <React.Fragment>\r\n        <label className = {`${!inputState.inputIsValid && inputState.touched && notValidLabelClass}`}><b>{props.Label}</b></label>\r\n        {InputType}\r\n        {!inputState.inputIsValid && inputState.touched && <p className={notValidLabelClass}>{props.Error}</p>} \r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}