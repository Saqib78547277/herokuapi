{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Deer\\\\Downloads\\\\New folder\\\\src\\\\Authentication\\\\Signin-Form\\\\LoginForm.js\";\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport Input from '../../Shared/Components/UI Element/Input';\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\nimport Backdrop from '../../Shared/Components/Backdrop/Backdrop';\nimport { useForm } from '../../Shared/Hooks/Form-Hook';\nimport { MIN_LENGTH_VALIDATOR, EMAIL_VALIDATOR } from '../../Shared/Util/Validators/Validator';\nimport classes from './LoginForm.module.css';\nimport { loginUser } from '../../Actions/UsersActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    loading_users,\n    loggedin_user\n  } = useSelector(state => state.users);\n  const [formState, inputChangeHandler] = useForm({\n    email: {\n      inputValue: '',\n      inputisValid: false\n    },\n    password: {\n      inputValue: '',\n      inputisValid: false\n    }\n  }, false);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const loginData = {\n      email: formState.inputs.email.inputValue,\n      password: formState.inputs.password.inputValue\n    };\n    dispatch(loginUser(loginData));\n  };\n\n  useEffect(() => {\n    const {\n      state\n    } = history.location;\n    loggedin_user && history.push(`${state ? state === null || state === void 0 ? void 0 : state.to : '/'}`);\n  }, [loggedin_user, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, loading_users && /*#__PURE__*/React.createElement(Backdrop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: 'gold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Signing In\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.addPlaceFORM,\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"SignIn\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    type: \"Input\",\n    fieldType: \"email\",\n    Label: \"Email\",\n    pHolder: \"Enter Email Address\",\n    rClass: \"gYellow\",\n    Error: \"Please Enter a Valid Email\",\n    onInputChange: inputChangeHandler,\n    validators: [EMAIL_VALIDATOR()],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    type: \"Input\",\n    fieldType: \"password\",\n    Label: \"Password\",\n    pHolder: \"Enter Password\",\n    rClass: \"gYellow\",\n    Error: \"Password Field is Required\",\n    onInputChange: inputChangeHandler,\n    validators: [MIN_LENGTH_VALIDATOR(1)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-success p-2 mt-3\",\n    disabled: !formState.formIsValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"LOG IN\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/John Deer/Downloads/New folder/src/Authentication/Signin-Form/LoginForm.js"],"names":["React","useEffect","useHistory","Input","Spinner","Backdrop","useForm","MIN_LENGTH_VALIDATOR","EMAIL_VALIDATOR","classes","loginUser","useDispatch","useSelector","LoginForm","history","dispatch","loading_users","loggedin_user","state","users","formState","inputChangeHandler","email","inputValue","inputisValid","password","submitForm","e","preventDefault","loginData","inputs","location","push","to","center","color","addPlaceFORM","alignSelf","formIsValid"],"mappings":"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","sourcesContent":["import React , { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport Input from '../../Shared/Components/UI Element/Input';\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport Backdrop from '../../Shared/Components/Backdrop/Backdrop';\r\nimport {useForm} from '../../Shared/Hooks/Form-Hook';\r\nimport {MIN_LENGTH_VALIDATOR , EMAIL_VALIDATOR} from '../../Shared/Util/Validators/Validator';\r\nimport classes from './LoginForm.module.css';\r\nimport { loginUser } from '../../Actions/UsersActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst LoginForm = () =>\r\n{\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { loading_users, loggedin_user } = useSelector( state => state.users);\r\n\r\n    const [formState , inputChangeHandler] = useForm({\r\n        email : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n        password : {\r\n            inputValue : '',\r\n            inputisValid : false\r\n        },\r\n    } , false)\r\n      \r\n    const submitForm = async e =>\r\n    {\r\n        e.preventDefault();\r\n        const loginData = {\r\n            email : formState.inputs.email.inputValue,\r\n            password : formState.inputs.password.inputValue,\r\n        }\r\n        dispatch(loginUser(loginData));\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { state } = history.location;\r\n        loggedin_user && history.push(`${state ? state?.to : '/'}`)\r\n    },[loggedin_user, history])\r\n   \r\n    return(\r\n        <div className={classes.center}>\r\n             {loading_users && \r\n            <Backdrop>\r\n                <Spinner />\r\n                <h2 style={{color:'gold'}}>Signing In</h2>\r\n            </Backdrop>\r\n            }\r\n            <form className = {classes.addPlaceFORM} onSubmit = {submitForm}>\r\n                <h3 style={{alignSelf: 'center'}}>SignIn</h3>\r\n                <Input  \r\n                    id = \"email\" type = \"Input\" fieldType = 'email' Label = \"Email\" \r\n                    pHolder = \"Enter Email Address\" rClass = 'gYellow'\r\n                    Error = \"Please Enter a Valid Email\" onInputChange = {inputChangeHandler}\r\n                    validators = {[EMAIL_VALIDATOR()]} \r\n                />\r\n\r\n                <Input  \r\n                    id = \"password\" type = \"Input\" fieldType = 'password'  Label = \"Password\" \r\n                    pHolder = \"Enter Password\" rClass = 'gYellow'\r\n                    Error = \"Password Field is Required\" onInputChange = {inputChangeHandler}\r\n                    validators = {[MIN_LENGTH_VALIDATOR(1)]}\r\n                />\r\n\r\n                <button  className = 'btn btn-outline-success p-2 mt-3' disabled={!formState.formIsValid}>\r\n                LOG IN\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}