{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Deer\\\\Downloads\\\\New folder\\\\src\\\\Places\\\\Pages\\\\UserPlaces.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getUserPlaces } from '../../Actions/PlacesActions';\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\nimport PlacesList from '../Components/PlacesList';\nimport classes from './UserPlaces.module.css';\n\nconst UserPlaces = props => {\n  const userId = useParams().uid;\n  const didMount = useRef(false);\n  const dispatch = useDispatch();\n  const {\n    places,\n    loading_places\n  } = useSelector(state => state.places); // const getPlaceByUserId = useCallback(async () =>\n  // {   \n  //     try \n  //     {\n  //         const response = await fetch(`${process.env.REACT_APP_BACKEND_URL.split(';')[0]}/places`);\n  //         const places = await response.json();\n  //         setPlacesLoadingState(false);\n  //         if(response.ok)\n  //         dispatchUsersPlaces({   type : 'PLACES_FETCHED',   value : places    })\n  //         // else    throw new Error(places.errorMsg)\n  //     } catch (error) { setErrorMessage(error.message); setPlacesLoadingState(false);  }\n  // },[dispatchUsersPlaces])\n\n  const deletePlaceHandler = () => {\n    dispatch(getUserPlaces(userId));\n  };\n\n  useEffect(() => {\n    dispatch(getUserPlaces(userId));\n    didMount.current = true;\n  }, [dispatch, userId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading_places || !(didMount === null || didMount === void 0 ? void 0 : didMount.current) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spinnerCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PlacesList, {\n    userPlaces: places,\n    onDeletePlace: deletePlaceHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["C:/Users/John Deer/Downloads/New folder/src/Places/Pages/UserPlaces.js"],"names":["React","useEffect","useRef","useSelector","useDispatch","useParams","getUserPlaces","Spinner","PlacesList","classes","UserPlaces","props","userId","uid","didMount","dispatch","places","loading_places","state","deletePlaceHandler","current","spinnerCenter","center"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IACxB;AACI,QAAMC,MAAM,GAAGP,SAAS,GAAGQ,GAA3B;AACA,QAAMC,QAAQ,GAAGZ,MAAM,CAAC,KAAD,CAAvB;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4Bd,WAAW,CAAEe,KAAK,IAAIA,KAAK,CAACF,MAAjB,CAA7C,CAJJ,CAMI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AACA,QAAMG,kBAAkB,GAAG,MAC3B;AACIJ,IAAAA,QAAQ,CAACT,aAAa,CAACM,MAAD,CAAd,CAAR;AACH,GAHD;;AAKAX,EAAAA,SAAS,CAAC,MACV;AACIc,IAAAA,QAAQ,CAACT,aAAa,CAACM,MAAD,CAAd,CAAR;AACAE,IAAAA,QAAQ,CAACM,OAAT,GAAmB,IAAnB;AACH,GAJQ,EAIP,CAACL,QAAD,EAAWH,MAAX,CAJO,CAAT;AAMA,sBAAQ,0CACKK,cAAc,IAAI,EAACH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEM,OAAX,CAAlB,gBACG;AAAK,IAAA,SAAS,EAAIX,OAAO,CAACY,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADH,gBAKG;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACa,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAIN,MAA1B;AAAkC,IAAA,aAAa,EAAEG,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANR,CAAR;AAYH,CA5CD;;AAgDA,eAAeT,UAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getUserPlaces } from '../../Actions/PlacesActions';\r\n\r\nimport Spinner from '../../Shared/Components/UI Element/Spinner';\r\nimport PlacesList from '../Components/PlacesList';\r\nimport classes from './UserPlaces.module.css';\r\n\r\nconst UserPlaces = props =>\r\n{\r\n    const userId = useParams().uid;\r\n    const didMount = useRef(false);\r\n    const dispatch = useDispatch();\r\n    const { places, loading_places} = useSelector( state => state.places);\r\n    \r\n    // const getPlaceByUserId = useCallback(async () =>\r\n    // {   \r\n    //     try \r\n    //     {\r\n    //         const response = await fetch(`${process.env.REACT_APP_BACKEND_URL.split(';')[0]}/places`);\r\n    //         const places = await response.json();\r\n            \r\n    //         setPlacesLoadingState(false);\r\n    //         if(response.ok)\r\n    //         dispatchUsersPlaces({   type : 'PLACES_FETCHED',   value : places    })\r\n    //         // else    throw new Error(places.errorMsg)\r\n            \r\n    //     } catch (error) { setErrorMessage(error.message); setPlacesLoadingState(false);  }\r\n    // },[dispatchUsersPlaces])\r\n    const deletePlaceHandler = () =>\r\n    {\r\n        dispatch(getUserPlaces(userId));\r\n    }\r\n    \r\n    useEffect(()=>\r\n    {\r\n        dispatch(getUserPlaces(userId));\r\n        didMount.current = true;\r\n    },[dispatch, userId])\r\n    \r\n    return  <>\r\n                {loading_places || !didMount?.current ? \r\n                    <div className = {classes.spinnerCenter}>\r\n                        <Spinner />\r\n                        <h2>Loading...</h2>\r\n                    </div> :\r\n                    <div className={classes.center}>\r\n                        <PlacesList userPlaces = {places} onDeletePlace={deletePlaceHandler} />\r\n                    </div> \r\n                }\r\n            </> \r\n    \r\n}\r\n\r\n\r\n\r\nexport default UserPlaces;"]},"metadata":{},"sourceType":"module"}